{"ast":null,"code":"var _jsxFileName = \"/Users/brianramirez/Dev/stack-bnb/src/components/Loading.js\";\nimport React, { Component, Children } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Loading extends Component {\n  constructor(props, context) {\n    super(props);\n  }\n\n  render() {\n    if (this.props.web3.status === 'failed') {\n      return (\n        /*#__PURE__*/\n        // Display a web3 warning.\n        _jsxDEV(\"main\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"\\u26A0\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This browser has no connection to the Ethereum network. Please use the Chrome/FireFox extension MetaMask, or dedicated Ethereum browsers Mist or Parity.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 9\n        }, this)\n      );\n    }\n\n    if (this.props.drizzleStatus.initialized) {\n      // Load the dapp.\n      return Children.only(this.props.children);\n    }\n\n    return (\n      /*#__PURE__*/\n      // Display a loading indicator.\n      _jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u2699\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading dapp...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this)\n    );\n  }\n\n}\n\nexport default Loading;","map":{"version":3,"sources":["/Users/brianramirez/Dev/stack-bnb/src/components/Loading.js"],"names":["React","Component","Children","Loading","constructor","props","context","render","web3","status","drizzleStatus","initialized","only","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAC9BG,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB;AAC1B,UAAMD,KAAN;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKF,KAAL,CAAWG,IAAX,CAAgBC,MAAhB,KAA2B,QAA/B,EACA;AACE;AAAA;AACE;AACA;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAOD;;AAED,QAAI,KAAKJ,KAAL,CAAWK,aAAX,CAAyBC,WAA7B,EACA;AACE;AACA,aAAOT,QAAQ,CAACU,IAAT,CAAc,KAAKP,KAAL,CAAWQ,QAAzB,CAAP;AACD;;AAED;AAAA;AACE;AACA;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAOD;;AA9B6B;;AAiChC,eAAeV,OAAf","sourcesContent":["import React, { Component, Children } from 'react'\n\nclass Loading extends Component {\n  constructor(props, context) {\n    super(props)\n  }\n\n  render() {\n    if (this.props.web3.status === 'failed')\n    {\n      return(\n        // Display a web3 warning.\n        <main>\n          <h1>⚠️</h1>\n          <p>This browser has no connection to the Ethereum network. Please use the Chrome/FireFox extension MetaMask, or dedicated Ethereum browsers Mist or Parity.</p>\n        </main>\n      )\n    }\n\n    if (this.props.drizzleStatus.initialized)\n    {\n      // Load the dapp.\n      return Children.only(this.props.children)\n    }\n\n    return(\n      // Display a loading indicator.\n      <main>\n        <h1>⚙️</h1>\n        <p>Loading dapp...</p>\n      </main>\n    )\n  }\n}\n\nexport default Loading"]},"metadata":{},"sourceType":"module"}