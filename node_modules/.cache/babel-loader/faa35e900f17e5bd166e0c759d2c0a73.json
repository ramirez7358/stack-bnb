{"ast":null,"code":"var _jsxFileName = \"/Users/brianramirez/Dev/stack-bnb/src/components/LoadingContainer.js\",\n    _s = $RefreshSig$();\n\nimport { drizzleReactHooks } from \"@drizzle/react-plugin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  useDrizzleState\n} = drizzleReactHooks;\n\nconst LoadingContainer = ({\n  children\n}) => {\n  _s();\n\n  const drizzleStatus = useDrizzleState(state => state.drizzleStatus);\n\n  if (drizzleStatus.initialized === false) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"loader-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"loader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: children\n    }, void 0, false);\n  }\n};\n\n_s(LoadingContainer, \"fZKPQmigZr5P+tUOdWUSmgkSBcw=\", false, function () {\n  return [useDrizzleState];\n});\n\n_c = LoadingContainer;\nexport default LoadingContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoadingContainer\");","map":{"version":3,"sources":["/Users/brianramirez/Dev/stack-bnb/src/components/LoadingContainer.js"],"names":["drizzleReactHooks","useDrizzleState","LoadingContainer","children","drizzleStatus","state","initialized"],"mappings":";;;AAAA,SAASA,iBAAT,QAAkC,uBAAlC;;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAsBD,iBAA5B;;AAEA,MAAME,gBAAgB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AACrC,QAAMC,aAAa,GAAGH,eAAe,CAACI,KAAK,IAAIA,KAAK,CAACD,aAAhB,CAArC;;AACA,MAAGA,aAAa,CAACE,WAAd,KAA8B,KAAjC,EAAwC;AACpC,wBACI;AAAK,MAAA,KAAK,EAAC,gBAAX;AAAA,6BACI;AAAK,QAAA,KAAK,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GAND,MAMM;AACF,wBAAO;AAAA,gBAAGH;AAAH,qBAAP;AACH;AACJ,CAXD;;GAAMD,gB;UACoBD,e;;;KADpBC,gB;AAaN,eAAeA,gBAAf","sourcesContent":["import { drizzleReactHooks } from \"@drizzle/react-plugin\";\n\nconst { useDrizzleState } = drizzleReactHooks;\n\nconst LoadingContainer = ({children}) => {\n    const drizzleStatus = useDrizzleState(state => state.drizzleStatus);\n    if(drizzleStatus.initialized === false) {\n        return (\n            <div class=\"loader-wrapper\">\n                <div class=\"loader\"></div>\n            </div>\n        );\n    }else {\n        return <>{children}</>;\n    }\n}\n\nexport default LoadingContainer;"]},"metadata":{},"sourceType":"module"}