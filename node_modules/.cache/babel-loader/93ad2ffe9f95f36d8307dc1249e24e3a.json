{"ast":null,"code":"var _jsxFileName = \"/Users/brianramirez/Dev/stack-bnb/src/components/ButtonWalletConnect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport getWeb3 from \"../getWeb3\";\nimport { AccountData } from \"@drizzle/react-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ButtonWalletConnect = () => {\n  _s();\n\n  const [wallet, setWallet] = useState('');\n  const [web3, setWeb3] = useState(null);\n  useEffect(() => {}, []);\n\n  const loadBlockchainData = async () => {\n    if (wallet === '') {\n      try {\n        const web3 = await getWeb3();\n        setWeb3(web3);\n        const accounts = await web3.eth.getAccounts();\n        setWallet(hiddenAccount(accounts[0]));\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const hiddenAccount = account => {\n    return account[0] + account[1] + account[2] + account[3] + account[4] + \"...\" + account[account.length - 6] + account[account.length - 5] + account[account.length - 4] + account[account.length - 3] + account[account.length - 2] + account[account.length - 1];\n  };\n\n  return /*#__PURE__*/_jsxDEV(AccountData, {\n    accountIndex: 0,\n    units: \"ether\",\n    precision: 3\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this)\n  /*<a onClick={loadBlockchainData} className=\"btn btn-custom theme-color\">\n      {wallet ? wallet : 'Connect'}\n  </a>*/\n  ;\n};\n\n_s(ButtonWalletConnect, \"puxPVtSFx8Rd53PTuIgQeA80x6I=\");\n\n_c = ButtonWalletConnect;\nexport default ButtonWalletConnect;\n\nvar _c;\n\n$RefreshReg$(_c, \"ButtonWalletConnect\");","map":{"version":3,"sources":["/Users/brianramirez/Dev/stack-bnb/src/components/ButtonWalletConnect.js"],"names":["React","useEffect","useState","getWeb3","AccountData","ButtonWalletConnect","wallet","setWallet","web3","setWeb3","loadBlockchainData","accounts","eth","getAccounts","hiddenAccount","error","console","log","account","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,WAAT,QAA4B,2BAA5B;;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;AAAA;;AAC9B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,IAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM,CACf,CADQ,EACN,EADM,CAAT;;AAGA,QAAMS,kBAAkB,GAAG,YAAY;AACnC,QAAGJ,MAAM,KAAK,EAAd,EAAkB;AACd,UAAI;AACA,cAAME,IAAI,GAAG,MAAML,OAAO,EAA1B;AACAM,QAAAA,OAAO,CAACD,IAAD,CAAP;AAEA,cAAMG,QAAQ,GAAG,MAAMH,IAAI,CAACI,GAAL,CAASC,WAAT,EAAvB;AACAN,QAAAA,SAAS,CAACO,aAAa,CAACH,QAAQ,CAAC,CAAD,CAAT,CAAd,CAAT;AACH,OAND,CAMC,OAAMI,KAAN,EAAa;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ;AACJ,GAZD;;AAcA,QAAMD,aAAa,GAAGI,OAAO,IAAI;AAC7B,WAAOA,OAAO,CAAC,CAAD,CAAP,GAAaA,OAAO,CAAC,CAAD,CAApB,GAA0BA,OAAO,CAAC,CAAD,CAAjC,GAAuCA,OAAO,CAAC,CAAD,CAA9C,GAAoDA,OAAO,CAAC,CAAD,CAA3D,GAAiE,KAAjE,GACAA,OAAO,CAACA,OAAO,CAACC,MAAR,GAAe,CAAhB,CADP,GAC4BD,OAAO,CAACA,OAAO,CAACC,MAAR,GAAe,CAAhB,CADnC,GACwDD,OAAO,CAACA,OAAO,CAACC,MAAR,GAAe,CAAhB,CAD/D,GAEAD,OAAO,CAACA,OAAO,CAACC,MAAR,GAAe,CAAhB,CAFP,GAE4BD,OAAO,CAACA,OAAO,CAACC,MAAR,GAAe,CAAhB,CAFnC,GAEwDD,OAAO,CAACA,OAAO,CAACC,MAAR,GAAe,CAAhB,CAFtE;AAGH,GAJD;;AAMA,sBACI,QAAC,WAAD;AAAa,IAAA,YAAY,EAAE,CAA3B;AAA8B,IAAA,KAAK,EAAE,OAArC;AAA8C,IAAA,SAAS,EAAE;AAAzD;AAAA;AAAA;AAAA;AAAA;AACA;AACR;AACA;AAJI;AAMH,CAjCD;;GAAMd,mB;;KAAAA,mB;AAmCN,eAAeA,mBAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport getWeb3 from \"../getWeb3\";\nimport { AccountData } from \"@drizzle/react-components\";\n\nconst ButtonWalletConnect = () => {\n    const [wallet, setWallet] = useState('');\n    const [web3, setWeb3] = useState(null);\n\n    useEffect(() => {  \n    }, []);\n\n    const loadBlockchainData = async () => {\n        if(wallet === '') {\n            try {\n                const web3 = await getWeb3();\n                setWeb3(web3);\n\n                const accounts = await web3.eth.getAccounts();\n                setWallet(hiddenAccount(accounts[0]));\n            }catch(error) {\n                console.log(error);\n            }\n        }\n    }\n\n    const hiddenAccount = account => {\n        return account[0] + account[1] + account[2] + account[3] + account[4] + \"...\" +\n               account[account.length-6] + account[account.length-5] + account[account.length-4] + \n               account[account.length-3] + account[account.length-2] + account[account.length-1]\n    }\n\n    return (\n        <AccountData accountIndex={0} units={\"ether\"} precision={3} />\n        /*<a onClick={loadBlockchainData} className=\"btn btn-custom theme-color\">\n            {wallet ? wallet : 'Connect'}\n        </a>*/\n    );\n}\n\nexport default ButtonWalletConnect;"]},"metadata":{},"sourceType":"module"}